// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fabric.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	fabric.proto
	chaincode.proto

It has these top-level messages:
	Message
	PeerID
	PeerEndpoint
	Transaction
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_Type int32

const (
	Message_UNDEFINED               Message_Type = 0
	Message_DISC_HELLO              Message_Type = 1
	Message_DISC_DISCONNECT         Message_Type = 2
	Message_DISC_GET_PEERS          Message_Type = 3
	Message_DISC_PEERS              Message_Type = 4
	Message_DISC_NEWMSG             Message_Type = 5
	Message_CHAIN_TRANSACTION       Message_Type = 6
	Message_SYNC_GET_BLOCKS         Message_Type = 11
	Message_SYNC_BLOCKS             Message_Type = 12
	Message_SYNC_BLOCK_ADDED        Message_Type = 13
	Message_SYNC_STATE_GET_SNAPSHOT Message_Type = 14
	Message_SYNC_STATE_SNAPSHOT     Message_Type = 15
	Message_SYNC_STATE_GET_DELTAS   Message_Type = 16
	Message_SYNC_STATE_DELTAS       Message_Type = 17
	Message_RESPONSE                Message_Type = 20
	Message_CONSENSUS               Message_Type = 21
)

var Message_Type_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "DISC_HELLO",
	2:  "DISC_DISCONNECT",
	3:  "DISC_GET_PEERS",
	4:  "DISC_PEERS",
	5:  "DISC_NEWMSG",
	6:  "CHAIN_TRANSACTION",
	11: "SYNC_GET_BLOCKS",
	12: "SYNC_BLOCKS",
	13: "SYNC_BLOCK_ADDED",
	14: "SYNC_STATE_GET_SNAPSHOT",
	15: "SYNC_STATE_SNAPSHOT",
	16: "SYNC_STATE_GET_DELTAS",
	17: "SYNC_STATE_DELTAS",
	20: "RESPONSE",
	21: "CONSENSUS",
}
var Message_Type_value = map[string]int32{
	"UNDEFINED":               0,
	"DISC_HELLO":              1,
	"DISC_DISCONNECT":         2,
	"DISC_GET_PEERS":          3,
	"DISC_PEERS":              4,
	"DISC_NEWMSG":             5,
	"CHAIN_TRANSACTION":       6,
	"SYNC_GET_BLOCKS":         11,
	"SYNC_BLOCKS":             12,
	"SYNC_BLOCK_ADDED":        13,
	"SYNC_STATE_GET_SNAPSHOT": 14,
	"SYNC_STATE_SNAPSHOT":     15,
	"SYNC_STATE_GET_DELTAS":   16,
	"SYNC_STATE_DELTAS":       17,
	"RESPONSE":                20,
	"CONSENSUS":               21,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type PeerEndpoint_Type int32

const (
	PeerEndpoint_UNDEFINED     PeerEndpoint_Type = 0
	PeerEndpoint_VALIDATOR     PeerEndpoint_Type = 1
	PeerEndpoint_NON_VALIDATOR PeerEndpoint_Type = 2
)

var PeerEndpoint_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "VALIDATOR",
	2: "NON_VALIDATOR",
}
var PeerEndpoint_Type_value = map[string]int32{
	"UNDEFINED":     0,
	"VALIDATOR":     1,
	"NON_VALIDATOR": 2,
}

func (x PeerEndpoint_Type) String() string {
	return proto.EnumName(PeerEndpoint_Type_name, int32(x))
}
func (PeerEndpoint_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Transaction_Type int32

const (
	Transaction_UNDEFINED Transaction_Type = 0
	// deploy a chaincode to the network and call `Init` function
	Transaction_CHAINCODE_DEPLOY Transaction_Type = 1
	// call a chaincode `Invoke` function as a transaction
	Transaction_CHAINCODE_INVOKE Transaction_Type = 2
	// call a chaincode `query` function
	Transaction_CHAINCODE_QUERY Transaction_Type = 3
	// terminate a chaincode; not implemented yet
	Transaction_CHAINCODE_TERMINATE Transaction_Type = 4
)

var Transaction_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "CHAINCODE_DEPLOY",
	2: "CHAINCODE_INVOKE",
	3: "CHAINCODE_QUERY",
	4: "CHAINCODE_TERMINATE",
}
var Transaction_Type_value = map[string]int32{
	"UNDEFINED":           0,
	"CHAINCODE_DEPLOY":    1,
	"CHAINCODE_INVOKE":    2,
	"CHAINCODE_QUERY":     3,
	"CHAINCODE_TERMINATE": 4,
}

func (x Transaction_Type) String() string {
	return proto.EnumName(Transaction_Type_name, int32(x))
}
func (Transaction_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Message struct {
	Type      Message_Type               `protobuf:"varint,1,opt,name=type,enum=protos.Message_Type" json:"type,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Payload   []byte                     `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature []byte                     `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_UNDEFINED
}

func (m *Message) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type PeerID struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *PeerID) Reset()                    { *m = PeerID{} }
func (m *PeerID) String() string            { return proto.CompactTextString(m) }
func (*PeerID) ProtoMessage()               {}
func (*PeerID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PeerID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PeerEndpoint struct {
	ID      *PeerID           `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Address string            `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Type    PeerEndpoint_Type `protobuf:"varint,3,opt,name=type,enum=protos.PeerEndpoint_Type" json:"type,omitempty"`
	PkiID   []byte            `protobuf:"bytes,4,opt,name=pkiID,proto3" json:"pkiID,omitempty"`
}

func (m *PeerEndpoint) Reset()                    { *m = PeerEndpoint{} }
func (m *PeerEndpoint) String() string            { return proto.CompactTextString(m) }
func (*PeerEndpoint) ProtoMessage()               {}
func (*PeerEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PeerEndpoint) GetID() *PeerID {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *PeerEndpoint) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PeerEndpoint) GetType() PeerEndpoint_Type {
	if m != nil {
		return m.Type
	}
	return PeerEndpoint_UNDEFINED
}

func (m *PeerEndpoint) GetPkiID() []byte {
	if m != nil {
		return m.PkiID
	}
	return nil
}

type Transaction struct {
	Type Transaction_Type `protobuf:"varint,1,opt,name=type,enum=protos.Transaction_Type" json:"type,omitempty"`
	// store ChaincodeID as bytes so its encrypted value can be stored
	ChaincodeID                    []byte                     `protobuf:"bytes,2,opt,name=chaincodeID,proto3" json:"chaincodeID,omitempty"`
	Payload                        []byte                     `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata                       []byte                     `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Txid                           string                     `protobuf:"bytes,5,opt,name=txid" json:"txid,omitempty"`
	Timestamp                      *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	ConfidentialityLevel           ConfidentialityLevel       `protobuf:"varint,7,opt,name=confidentialityLevel,enum=protos.ConfidentialityLevel" json:"confidentialityLevel,omitempty"`
	ConfidentialityProtocolVersion string                     `protobuf:"bytes,8,opt,name=confidentialityProtocolVersion" json:"confidentialityProtocolVersion,omitempty"`
	Nonce                          []byte                     `protobuf:"bytes,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ToValidators                   []byte                     `protobuf:"bytes,10,opt,name=toValidators,proto3" json:"toValidators,omitempty"`
	Cert                           []byte                     `protobuf:"bytes,11,opt,name=cert,proto3" json:"cert,omitempty"`
	Signature                      []byte                     `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Transaction) GetType() Transaction_Type {
	if m != nil {
		return m.Type
	}
	return Transaction_UNDEFINED
}

func (m *Transaction) GetChaincodeID() []byte {
	if m != nil {
		return m.ChaincodeID
	}
	return nil
}

func (m *Transaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Transaction) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Transaction) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Transaction) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Transaction) GetConfidentialityLevel() ConfidentialityLevel {
	if m != nil {
		return m.ConfidentialityLevel
	}
	return ConfidentialityLevel_PUBLIC
}

func (m *Transaction) GetConfidentialityProtocolVersion() string {
	if m != nil {
		return m.ConfidentialityProtocolVersion
	}
	return ""
}

func (m *Transaction) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Transaction) GetToValidators() []byte {
	if m != nil {
		return m.ToValidators
	}
	return nil
}

func (m *Transaction) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *Transaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "protos.Message")
	proto.RegisterType((*PeerID)(nil), "protos.PeerID")
	proto.RegisterType((*PeerEndpoint)(nil), "protos.PeerEndpoint")
	proto.RegisterType((*Transaction)(nil), "protos.Transaction")
	proto.RegisterEnum("protos.Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("protos.PeerEndpoint_Type", PeerEndpoint_Type_name, PeerEndpoint_Type_value)
	proto.RegisterEnum("protos.Transaction_Type", Transaction_Type_name, Transaction_Type_value)
}

func init() { proto.RegisterFile("fabric.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 726 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0xe2, 0x48,
	0x10, 0x5e, 0x03, 0x21, 0xa1, 0x30, 0xd0, 0xe9, 0x10, 0xc5, 0x61, 0xa3, 0x2c, 0xe2, 0xc4, 0x61,
	0x97, 0x48, 0xd9, 0xc3, 0xee, 0xd5, 0x6b, 0x77, 0x12, 0x2b, 0xa4, 0xcd, 0xda, 0x0e, 0xa3, 0x9c,
	0x50, 0xc7, 0xee, 0x30, 0xd6, 0x80, 0x8d, 0x6c, 0x67, 0x34, 0xbc, 0xe0, 0xcc, 0x2b, 0xcc, 0x5b,
	0xcc, 0x2b, 0x8c, 0xba, 0x8d, 0xf9, 0x89, 0xd0, 0x8c, 0xe6, 0x62, 0x77, 0x7d, 0xdf, 0x57, 0xd5,
	0xd5, 0x5d, 0x55, 0x0d, 0xea, 0x0b, 0x7b, 0x4e, 0x42, 0x7f, 0xb0, 0x48, 0xe2, 0x2c, 0xc6, 0x55,
	0xf9, 0x4b, 0x3b, 0x2d, 0xff, 0x3d, 0x0b, 0x23, 0x3f, 0x0e, 0x78, 0x4e, 0x74, 0xfe, 0x98, 0xc6,
	0xf1, 0x74, 0xc6, 0xaf, 0xa4, 0xf5, 0xfc, 0xfa, 0x72, 0x95, 0x85, 0x73, 0x9e, 0x66, 0x6c, 0xbe,
	0xc8, 0x05, 0xbd, 0x6f, 0x65, 0x38, 0x7c, 0xe0, 0x69, 0xca, 0xa6, 0x1c, 0xf7, 0xa1, 0x92, 0x2d,
	0x17, 0x5c, 0x53, 0xba, 0x4a, 0xbf, 0x79, 0xdd, 0xce, 0x15, 0xe9, 0x60, 0x45, 0x0f, 0xbc, 0xe5,
	0x82, 0x3b, 0x52, 0x81, 0xff, 0x85, 0xda, 0x3a, 0x90, 0x56, 0xea, 0x2a, 0xfd, 0xfa, 0x75, 0x67,
	0x90, 0x6f, 0x35, 0x28, 0xb6, 0x1a, 0x78, 0x85, 0xc2, 0xd9, 0x88, 0xb1, 0x06, 0x87, 0x0b, 0xb6,
	0x9c, 0xc5, 0x2c, 0xd0, 0xca, 0x5d, 0xa5, 0xaf, 0x3a, 0x85, 0x89, 0x2f, 0xa0, 0x96, 0x86, 0xd3,
	0x88, 0x65, 0xaf, 0x09, 0xd7, 0x2a, 0x92, 0xdb, 0x00, 0xbd, 0x2f, 0x25, 0xa8, 0x88, 0x04, 0x70,
	0x03, 0x6a, 0x8f, 0xd4, 0x24, 0x37, 0x16, 0x25, 0x26, 0xfa, 0x0d, 0x37, 0x01, 0x4c, 0xcb, 0x35,
	0x26, 0x77, 0x64, 0x38, 0xb4, 0x91, 0x82, 0x4f, 0xa0, 0x25, 0x6d, 0xf1, 0xb1, 0x29, 0x25, 0x86,
	0x87, 0x4a, 0x18, 0x43, 0x53, 0x82, 0xb7, 0xc4, 0x9b, 0x8c, 0x08, 0x71, 0x5c, 0x54, 0x5e, 0x3b,
	0xe6, 0x76, 0x05, 0xb7, 0xa0, 0x2e, 0x6d, 0x4a, 0xde, 0x3d, 0xb8, 0xb7, 0xe8, 0x00, 0x9f, 0xc2,
	0xb1, 0x71, 0xa7, 0x5b, 0x74, 0xe2, 0x39, 0x3a, 0x75, 0x75, 0xc3, 0xb3, 0x6c, 0x8a, 0xaa, 0x62,
	0x03, 0xf7, 0x89, 0xe6, 0xb1, 0xfe, 0x1b, 0xda, 0xc6, 0xbd, 0x8b, 0xea, 0xc2, 0x59, 0x82, 0x2b,
	0x40, 0xc5, 0x6d, 0x40, 0x1b, 0x60, 0xa2, 0x9b, 0x26, 0x31, 0x51, 0x03, 0xff, 0x0e, 0x67, 0x12,
	0x75, 0x3d, 0xdd, 0x23, 0x32, 0x82, 0x4b, 0xf5, 0x91, 0x7b, 0x67, 0x7b, 0xa8, 0x89, 0xcf, 0xe0,
	0x64, 0x8b, 0x5c, 0x13, 0x2d, 0x7c, 0x0e, 0xa7, 0x6f, 0xbc, 0x4c, 0x32, 0xf4, 0x74, 0x17, 0x21,
	0x91, 0xe3, 0x16, 0xb5, 0x82, 0x8f, 0xb1, 0x0a, 0x47, 0x0e, 0x71, 0x47, 0x36, 0x75, 0x09, 0x6a,
	0x8b, 0x1b, 0x33, 0xc4, 0x92, 0xba, 0x8f, 0x2e, 0x3a, 0xed, 0x5d, 0x40, 0x75, 0xc4, 0x79, 0x62,
	0x99, 0x18, 0x43, 0x25, 0x62, 0xf3, 0xbc, 0xde, 0x35, 0x47, 0xae, 0x7b, 0x9f, 0x15, 0x50, 0x05,
	0x4d, 0xa2, 0x60, 0x11, 0x87, 0x51, 0x86, 0x2f, 0xa1, 0x64, 0x99, 0x52, 0x52, 0xbf, 0x6e, 0x16,
	0x2d, 0x91, 0x07, 0x70, 0x4a, 0x96, 0x29, 0x0a, 0xca, 0x82, 0x20, 0xe1, 0x69, 0x2a, 0x1b, 0xa1,
	0xe6, 0x14, 0x26, 0xfe, 0x6b, 0xd5, 0x4e, 0x65, 0xd9, 0x4e, 0xe7, 0xdb, 0xbe, 0x45, 0xf4, 0xed,
	0x9e, 0x6a, 0xc3, 0xc1, 0xe2, 0x43, 0x68, 0x99, 0xab, 0xda, 0xe7, 0x46, 0xef, 0x9f, 0xfd, 0x65,
	0x6f, 0x40, 0x6d, 0xac, 0x0f, 0x2d, 0x53, 0xf7, 0x6c, 0x07, 0x29, 0xf8, 0x18, 0x1a, 0xd4, 0xa6,
	0x93, 0x0d, 0x54, 0xea, 0x7d, 0xad, 0x40, 0xdd, 0x4b, 0x58, 0x94, 0x32, 0x3f, 0x0b, 0xe3, 0x08,
	0xff, 0xb9, 0xd3, 0xdc, 0x5a, 0x91, 0xcd, 0x96, 0x64, 0x3b, 0x99, 0x2e, 0xd4, 0xd7, 0xa3, 0x64,
	0x99, 0xf2, 0x64, 0xaa, 0xb3, 0x0d, 0xfd, 0xa0, 0x91, 0x3b, 0x70, 0x34, 0xe7, 0x19, 0x0b, 0x58,
	0xc6, 0x56, 0x67, 0x59, 0xdb, 0xe2, 0xca, 0xb3, 0x4f, 0x61, 0xa0, 0x1d, 0xe4, 0x57, 0x2e, 0xd6,
	0xbb, 0xc3, 0x54, 0xfd, 0x95, 0x61, 0x1a, 0x41, 0xdb, 0x8f, 0xa3, 0x97, 0x30, 0xe0, 0x51, 0x16,
	0xb2, 0x59, 0x98, 0x2d, 0x87, 0xfc, 0x23, 0x9f, 0x69, 0x87, 0xf2, 0x8c, 0x17, 0xc5, 0x19, 0x8d,
	0x3d, 0x1a, 0x67, 0xaf, 0x27, 0xbe, 0x81, 0xcb, 0x37, 0xf8, 0x48, 0xc4, 0xf0, 0xe3, 0xd9, 0x98,
	0x27, 0x69, 0x18, 0x47, 0xda, 0x91, 0xcc, 0xfc, 0x27, 0x2a, 0x51, 0xcc, 0x28, 0x8e, 0x7c, 0xae,
	0xd5, 0xf2, 0x62, 0x4a, 0x03, 0xf7, 0x40, 0xcd, 0xe2, 0x31, 0x9b, 0x85, 0x01, 0xcb, 0xe2, 0x24,
	0xd5, 0x40, 0x92, 0x3b, 0x98, 0xb8, 0x21, 0x9f, 0x27, 0x99, 0x56, 0x97, 0x9c, 0x5c, 0xef, 0x3e,
	0x0d, 0xea, 0xdb, 0xa7, 0x21, 0xde, 0xdf, 0x22, 0x6d, 0x40, 0x72, 0x7e, 0x0d, 0xdb, 0x14, 0xa3,
	0x31, 0x1a, 0xda, 0x4f, 0x48, 0xd9, 0x45, 0x2d, 0x3a, 0xb6, 0xef, 0x09, 0x2a, 0x89, 0xa1, 0xde,
	0xa0, 0xff, 0x3f, 0x12, 0xe7, 0x09, 0x95, 0xc5, 0x40, 0x6e, 0x40, 0x8f, 0x38, 0x0f, 0x16, 0xd5,
	0x3d, 0x82, 0x2a, 0xcf, 0xf9, 0x6b, 0xfb, 0xf7, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x7e,
	0xa9, 0x8f, 0x84, 0x05, 0x00, 0x00,
}
